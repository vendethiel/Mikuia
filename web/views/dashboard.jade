extends layout

block content
	.page-head
		.page-title
			h1
				| Dashboard
				small  stuff and more stuff
	ul.page-breadcrumb.breadcrumb
		li
			a(href='/dashboard') Dashboard
	.row
		.col-md-12
			if !enabled
				.alert.alert-block.alert-danger
					h4.alert-heading #{Mikuia.settings.bot.name} is not enabled on your channel!
					p
						| If you start complaining that it's not working without even trying to enable it, I'll fucking cut you.
					p
						a.btn.btn-default(href='/dashboard/settings') Settings
	.row
		.col-lg-3.col-md-3.col-sm-16.col-xs-12
			if live
				.dashboard-stat2
					.display
						.number
							h3.font-red-haze=tracker.viewers
							small Viewers
						.icon
							i.icon-user
		.col-lg-3.col-md-3.col-sm-16.col-xs-12
			if live
				.dashboard-stat2
					.display
						.number
							h3.font-blue-sharp=tracker.chatters
							small Chatters
						.icon
							i.icon-users
		.col-lg-3.col-md-3.col-sm-16.col-xs-12
			.dashboard-stat2
					.display
						.number
							if tracker.followers
								h3.font-purple-plum=tracker.followers
							else
								h3.font-purple-plum N/A
							small Followers
						.icon
							i.icon-users
		.col-lg-3.col-md-3.col-sm-16.col-xs-12
			.dashboard-stat2
				.display
					.number
						h3.font-green-sharp=tracker.commands
						small Total Commands Handled
					.icon
						i.icon-wrench
	.row
		.col-lg-9.col-md-9.col-sm-16.col-xs-12
			if supporter
				.portlet.light
					.portlet-title
						.caption
							i.fa.fa-cogs
							i.icon-heart
							span.caption-subject.bold.uppercase Viewers & Chatters
							span.caption-helper  last 24 hours
					.portlet-body
						#viewerChart

				.portlet.light.hidden
					.portlet-title
						.caption
							i.fa.fa-cogs
							i.icon-heart
							span.caption-subject.bold.uppercase Insert Chart Here
							span.caption-helper  last 24 hours
					.portlet-body
						#followerChart
		.col-lg-3.col-md-3.col-sm-16.col-xs-12
			.dashboard-stat2
				.display
					.number
						h3.font-green-sharp=tracker.messages
						small Total Chat Messages
					.icon
						i.icon-speech

			if supporter
				- var supporterLeft = supporterStatus - (new Date()).getTime() / 1000
				- var supporterPercent = Math.floor(100 - (supporterLeft / (supporterStatus - supporterStart)) * 100)
				.dashboard-stat2
					.display
						.number
							h3.font-red-haze=supporterLeftText
							small #{Mikuia.settings.bot.name} Supporter Ending
						.icon
							i.icon-heart
					.progress-info
						.progress
							.progress-bar.red-haze(style='width: #{supporterPercent}%')
								.sr-only #{supporterPercent}%
						.status
							.status-title progress
							.status-number #{supporterPercent}%

block footerScript
	if supporter
		script(type='text/javascript').
			!function(a,b){a('Keen','https://d26b395fwzu5fz.cloudfront.net/3.1.0/keen.min.js',b)}(function(a,b,c){var d,e,f;c['_'+a]={},c[a]=function(b){c['_'+a].clients=c['_'+a].clients||{},c['_'+a].clients[b.projectId]=this,this._config=b},c[a].ready=function(b){c['_'+a].ready=c['_'+a].ready||[],c['_'+a].ready.push(b)},d=['addEvent','setGlobalProperties','trackExternalLink','on'];for(var g=0;g<d.length;g++){var h=d[g],i=function(a){return function(){return this['_'+a]=this['_'+a]||[],this['_'+a].push(arguments),this}};c[a].prototype[h]=i(h)}e=document.createElement('script'),e.async=!0,e.src=b,f=document.getElementsByTagName('script')[0],f.parentNode.insertBefore(e,f)},this);

			var keen = new Keen({
				projectId: '548ccdfa90e4bd2427852b04',
				readKey: 'd7630d579a75e6dd3e21d6114b223ce56c25db7d188b8219af8fcf645ae9770ebaefa2185893691fdb6d95be30f6b31854cda1e0168cd3c2d36466928e3b2f5f2c8908e8432ad82e94dabc0efc7dfdf76da756b9c00be2c3ea772a1e904bf4f1581b21af1d6f9e3c9719ae606cce44c0'
			})

			Keen.ready(function() {
				var interval = 'every_5_minutes'
				var timeframe = 'previous_3600_minutes'

				var chatterQuery = new Keen.Query('maximum', {
					eventCollection: 'channelStats',
					timeframe: timeframe,
					targetProperty: 'chatters',
					interval: interval,
					groupBy: 'channel',
					filters: [{
						'property_name': 'channel',
						'operator': 'eq',
						'property_value': '#{channel}'
					}]
				})

				var viewerQuery = new Keen.Query('maximum', {
					eventCollection: 'channelStats',
					timeframe: timeframe,
					targetProperty: 'viewers',
					interval: interval,
					groupBy: 'channel',
					filters: [{
						'property_name': 'channel',
						'operator': 'eq',
						'property_value': '#{channel}'
					}]
				})

				keen.run([chatterQuery, viewerQuery], function(response) {
					var result1 = response[0].result
					var result2 = response[1].result
					var data = []
					var i = 0

					while(i < result1.length) {

						value1 = result1[i].value[0].result
						value2 = result2[i].value[0].result

						data[i] = {
							timeframe: result1[i].timeframe,
							value: [
								{
									category: 'Chatters',
									result: value1
								},
								{
									category: 'Viewers',
									result: value2
								}
							]
						}
						i++
					}

					window.chart = new Keen.Visualization({
						result: data
					}, document.getElementById('viewerChart'), {
						chartOptions: {
							chartArea: {
								height: '85%',
								left: '5%',
								top: '10%',
								width: '90%'
							},
							crosshair: {
								color: '#333',
								trigger: 'focus'
							},
							curveType: 'function',
							explorer: {},
							hAxis: {
								gridlines: {
									count: 12
								}
							},
							legend: 'top'
						},
						chartType: 'areachart',
						title: ' '
					})
				})
			})
